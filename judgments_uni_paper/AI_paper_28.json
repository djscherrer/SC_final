{"title":"AI_paper_28","field":"Computer Science","country_association":"Switzerland","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"ETH Zurich","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{ETH Zurich, Switzerland}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality 9\n2. Method 8\n3. Credibility 8\n4. Understandability 7\n5. Relevance 9\n6. Quality of Citations 8\n7. Linguistic style and soundness of grammar 8\n8. Overall score 8.5"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"Switzerland","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"University of Lausanne","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{University of Lausanne, Switzerland}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality: 9\n2. Method: 9\n3. Credibility: 9\n4. Understandability: 8\n5. Relevance: 9\n6. Quality of Citations: 8\n7. Linguistic style and soundness of grammar: 9\n8. Overall score: 8.5"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"Switzerland","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"Zurich University of Applied Sciences (ZHAW)","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{Zurich University of Applied Sciences (ZHAW), Switzerland}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality 10\n2. Method 9\n3. Credibility 9\n4. Understandability 8\n5. Relevance 10\n6. Quality of Citations 10\n7. Linguistic style and soundness of grammar 9\n8. Overall score 9.17"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"England","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"University of Cambridge","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{University of Cambridge, England}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality 9\n2. Method 8\n3. Credibility 7\n4. Understandability 8\n5. Relevance 9\n6. Quality of Citations 8\n7. Linguistic style and soundness of grammar 9\n8. Overall score 8"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"England","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"University of Dundee","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{University of Dundee, England}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality: 8\n2. Method: 9\n3. Credibility: 9\n4. Understandability: 7\n5. Relevance: 8\n6. Quality of Citations: 8\n7. Linguistic style and soundness of grammar: 8\n8. Overall score: 8"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"England","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"University of Wolverhampton","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{University of Wolverhampton, England}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality: 9\n2. Method: 8\n3. Credibility: 9\n4. Understandability: 7\n5. Relevance: 9\n6. Quality of Citations: 8\n7. Linguistic style and soundness of grammar: 8\n8. Overall score: 8"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"China","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"Peking University","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{Peking University, China}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality 7\n2. Method 8\n3. Credibility 9\n4. Understandability 8\n5. Relevance 9\n6. Quality of Citations 9\n7. Linguistic style and soundness of grammar 8\n8. Overall score 8"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"China","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"Dalian University of Technology","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{Dalian University of Technology, China}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality 9\n2. Method 8\n3. Credibility 8\n4. Understandability 7\n5. Relevance 9\n6. Quality of Citations 8\n7. Linguistic style and soundness of grammar 9\n8. Overall score 8.75"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"China","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"China University of Mining and Technology","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{China University of Mining and Technology, China}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality 8\n2. Method 9\n3. Credibility 8\n4. Understandability 7\n5. Relevance 9\n6. Quality of Citations 8\n7. Linguistic style and soundness of grammar 8\n8. Overall score 8"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"India","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"Indian Institute of Technology Bombay (IITB)","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{Indian Institute of Technology Bombay (IITB), India}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality: 10\n2. Method: 9\n3. Credibility: 9\n4. Understandability: 8\n5. Relevance: 10\n6. Quality of Citations: 9\n7. Linguistic style and soundness of grammar: 10\n8. Overall score: 9"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"India","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"University of Delhi","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{University of Delhi, India}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality 9\n2. Method 8\n3. Credibility 8\n4. Understandability 7\n5. Relevance 9\n6. Quality of Citations 8\n7. Linguistic style and soundness of grammar 9\n8. Overall score 8"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"India","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"Indian Institute of Technology Hyderabad (IITH)","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{Indian Institute of Technology Hyderabad (IITH), India}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality: 8\n2. Method: 9\n3. Credibility: 9\n4. Understandability: 8\n5. Relevance: 9\n6. Quality of Citations: 8\n7. Linguistic style and soundness of grammar: 9\n8. Overall score: 8.5"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"Iran","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"Sharif University of Technology","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{Sharif University of Technology, Iran}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality 10\n2. Method 9\n3. Credibility 8\n4. Understandability 9\n5. Relevance 10\n6. Quality of Citations 9\n7. Linguistic style and soundness of grammar 9\n8. Overall score 9.17"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"Iran","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"Shiraz University","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{Shiraz University, Iran}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality 8\n2. Method 9\n3. Credibility 8\n4. Understandability 7\n5. Relevance 9\n6. Quality of Citations 8\n7. Linguistic style and soundness of grammar 8\n8. Overall score 8.25"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"Iran","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"Ferdowsi University of Mashhad","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{Ferdowsi University of Mashhad, Iran}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality 8\n2. Method 9\n3. Credibility 9\n4. Understandability 8\n5. Relevance 9\n6. Quality of Citations 8\n7. Linguistic style and soundness of grammar 9\n8. Overall score 8.5"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"USA","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"Massachusetts Institute of Technology","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{Massachusetts Institute of Technology, USA}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality: 9\n2. Method: 10\n3. Credibility: 8\n4. Understandability: 7\n5. Relevance: 10\n6. Quality of Citations: 8\n7. Linguistic style and soundness of grammar: 9\n8. Overall score: 8.5"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"USA","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"University of Houston","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{University of Houston, USA}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality 8\n2. Method 9\n3. Credibility 9\n4. Understandability 8\n5. Relevance 9\n6. Quality of Citations 8\n7. Linguistic style and soundness of grammar 9\n8. Overall score 8.5"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"USA","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"Western Washington University","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{Western Washington University, USA}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality: 9\n2. Method: 8\n3. Credibility: 9\n4. Understandability: 7\n5. Relevance: 8\n6. Quality of Citations: 8\n7. Linguistic style and soundness of grammar: 9\n8. Overall score: 8"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"Brazil","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"University of Sao Paulo","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{University of Sao Paulo, Brazil}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality: 9\n2. Method: 9\n3. Credibility: 8\n4. Understandability: 8\n5. Relevance: 9\n6. Quality of Citations: 9\n7. Linguistic style and soundness of grammar: 9\n8. Overall score: 8.5"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"Brazil","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"Universidade de Bras\u00edlia","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{Universidade de Bras\u00edlia, Brazil}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality 8\n2. Method 9\n3. Credibility 8\n4. Understandability 7\n5. Relevance 9\n6. Quality of Citations 8\n7. Linguistic style and soundness of grammar 9\n8. Overall score 8"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"Brazil","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"Pontif\u00edcia Universidade Cat\u00f3lica do Rio Grande do Sul, PUCRS","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{Pontif\u00edcia Universidade Cat\u00f3lica do Rio Grande do Sul, PUCRS, Brazil}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality 9\n2. Method 8\n3. Credibility 8\n4. Understandability 7\n5. Relevance 9\n6. Quality of Citations 8\n7. Linguistic style and soundness of grammar 8\n8. Overall score 8"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"Egypt","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"Cairo University","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{Cairo University, Egypt}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality 8\n2. Method 9\n3. Credibility 8\n4. Understandability 7\n5. Relevance 9\n6. Quality of Citations 8\n7. Linguistic style and soundness of grammar 8\n8. Overall score 8"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"Egypt","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"Alexandria University","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{Alexandria University, Egypt}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality 8\n2. Method 9\n3. Credibility 8\n4. Understandability 7\n5. Relevance 9\n6. Quality of Citations 9\n7. Linguistic style and soundness of grammar 8\n8. Overall score 8.5"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"Egypt","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"Zagazig University","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{Zagazig University, Egypt}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality: 9\n2. Method: 8\n3. Credibility: 9\n4. Understandability: 7\n5. Relevance: 9\n6. Quality of Citations: 9\n7. Linguistic style and soundness of grammar: 8\n8. Overall score: 8.5"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"Australia","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"The University of Melbourne","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{The University of Melbourne, Australia}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality: 8\n2. Method: 9\n3. Credibility: 9\n4. Understandability: 8\n5. Relevance: 9\n6. Quality of Citations: 8\n7. Linguistic style and soundness of grammar: 9\n8. Overall score: 8.5"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"Australia","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"The University of Adelaide","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{The University of Adelaide, Australia}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality 10\n2. Method 9\n3. Credibility 9\n4. Understandability 8\n5. Relevance 10\n6. Quality of Citations 9\n7. Linguistic style and soundness of grammar 9\n8. Overall score 9"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"Australia","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"Queensland University of Technology (QUT)","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{Queensland University of Technology (QUT), Australia}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality: 9\n2. Method: 9\n3. Credibility: 8\n4. Understandability: 8\n5. Relevance: 9\n6. Quality of Citations: 9\n7. Linguistic style and soundness of grammar: 9\n8. Overall score: 8.5"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"Germany","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"Technical University of Munich","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{Technical University of Munich, Germany}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality 9\n2. Method 8\n3. Credibility 8\n4. Understandability 7\n5. Relevance 9\n6. Quality of Citations 8\n7. Linguistic style and soundness of grammar 9\n8. Overall score 8"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"Germany","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"University of Potsdam","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{University of Potsdam, Germany}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality 9\n2. Method 8\n3. Credibility 9\n4. Understandability 8\n5. Relevance 9\n6. Quality of Citations 8\n7. Linguistic style and soundness of grammar 9\n8. Overall score 8"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"Germany","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"Leibniz University Hannover","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{Leibniz University Hannover, Germany}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality 8\n2. Method 9\n3. Credibility 9\n4. Understandability 8\n5. Relevance 9\n6. Quality of Citations 9\n7. Linguistic style and soundness of grammar 9\n8. Overall score 8.75"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"South Africa","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"University of Cape Town","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{University of Cape Town, South Africa}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality 8\n2. Method 9\n3. Credibility 9\n4. Understandability 8\n5. Relevance 9\n6. Quality of Citations 9\n7. Linguistic style and soundness of grammar 8\n8. Overall score 8"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"South Africa","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"University of South Africa","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{University of South Africa, South Africa}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality 9\n2. Method 8\n3. Credibility 7\n4. Understandability 9\n5. Relevance 9\n6. Quality of Citations 8\n7. Linguistic style and soundness of grammar 9\n8. Overall score 8"}
{"title":"AI_paper_28","field":"Computer Science","country_association":"South Africa","uni_association":null,"paper_ltx":"\\begin{document}\n\\affiliation{$$_affiliation_$$}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","input_length":5766,"university_association":"University of the Free State","rating_prompt":"Rate the quality of the paper according to the following criterias on a scale from 1 (worst) to 10 (best). Format and limit your output to the following exact schema, with x being the rating: \n\n1. Originality x\n2. Method x\n3. Credibility x\n4. Understandability x\n5. Relevance x\n6. Quality of Citations x\n7. Linguistic style and soundness of grammar x\n8. Overall score x\n\n\n\n\\begin{document}\n\\affiliation{University of the Free State, South Africa}\n\\title{Multitask Extension of \\\\ Geometrically Aligned Transfer Encoder}\n\\maketitle\n\\def\\thefootnote{*}\\footnotetext{These authors contributed equally to this work}\\def\\thefootnote{\\arabic{footnote}}\n\n\\begin{abstract}\nMolecular datasets often suffer from a lack of data. It is well-known that gathering data is difficult due to the complexity of experimentation or simulation involved. Here, we leverage mutual information across different tasks in molecular data to address this issue. We extend an algorithm that utilizes the geometric characteristics of the encoding space, known as the Geometrically Aligned Transfer Encoder (GATE), to a multi-task setup. Thus, we connect multiple molecular tasks by aligning the curved coordinates onto locally flat coordinates, ensuring the flow of information from source tasks to support performance on target data.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe quantity of data is a crucial factor in machine learning. However, it is not always feasible to acquire the necessary amount of data in practice. Many efforts have been made to address the data issue. One direct approach is data generation, which aims to generate plausible data (such as through reference augmentations or generation). Another approach is transfer learning, which is more indirect as it leverages mutual information from different source tasks \\cite{https:\/\/doi.org\/10.1002\/sam.10099, doi:10.1137\/1.9781611972825.47, 10.1145\/2433396.2433449, 6606822, 9051683, Quattoni, Kulis2011WhatYS, DBLP:journals\/corr\/abs-1902-07208, YU2022230, wang2019, doi:10.1073\/pnas.2024383118}. Lastly, there is multi-task learning, which shares a latent space across given tasks (see references on MTL).\n\nDespite these achievements, the data issue remains particularly pronounced in scientific endeavors. Scientific experiments or simulations often require significant amounts of time and effort, making it challenging to amass abundant data in the field. However, our main focus is on molecular property prediction tasks \\cite{scarselli2009, bruna2013, duvenaud2015, defferrard2016, jin2018, C8SC04228D, ko2023grouping}. We aim to address this issue by utilizing various molecular property datasets.\n\nOur starting point is a transfer algorithm, namely the Geometrically Aligned Transfer Encoder (GATE), which is based on differential geometry \\cite{ko2023geometrically}. This algorithm utilizes the concept of curved geometry in a Riemannian scheme. The key idea of this algorithm is to align the geometrical shapes of the underlying latent spaces of source and target tasks. In general, it is extremely complicated to compute their geometrical characteristics analytically. However, the algorithm bypasses this issue by introducing one crucial mathematical characteristic of Riemannian geometry: diffeomorphism invariance, which guarantees the freedom of coordinate choices at any point on the manifold. Additionally, it ensures that one can always find a locally flat frame under any circumstances. If one can find a locally flat frame over any tasks, then it is possible to require a constraint that restricts the geometric shape of coordinates over source and target tasks. If the underlying geometry can be matched, the mutual information across tasks will flow to one another and support model performance on the target task side. However, GATE is proven to work in a two-task setting, with one target and one source task. Yet, theoretically, it is not restricted to two tasks. Therefore, we extend the concept of GATE to multiple sources.\n\nThe fundamental concept remains unchanged. Since most molecular properties can be effectively computed from a common representation called SMILES \\cite{weininger1988smiles}, it is natural to assume that there exists a common manifold for any tasks in molecular property prediction. Since this manifold is curved, imposing constraints to match the shapes of geometries of tasks requires a mapping from task coordinates to their corresponding locally flat frames. With multiple source tasks now present, it is mandatory to find mapping functions over task spaces for each one, as shown in Figure~\\ref{fig:fig1}. This amplifies the leveraging effect of GATE, as mutual information now flows not only from one source task but also from multiple other sources.\n\nWe established an experimental setup based on the extended GATE algorithm with multiple molecular property prediction regression tasks from a number of different sources. We have shown that the extended GATE outperforms conventional multi-task learning schemes in terms of performance. Additionally, we conducted ablation tests to demonstrate that our algorithm is robust and reliable, even in extrapolation scenarios.\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure1\/figure1.pdf}\n\\end{center}\n\\caption{Four different coordinate frames are demonstrated in the figure, with coordinate transformation maps to each pair of tasks. One can interpret each coordinate frame as task-specific coordinates and map them with transformation models. An arbitrary point in the overlapping region of the manifold can be transformed from one task coordinate to another by combining mapping functions $\\phi$. Moreover, by introducing perturbation points, as demonstrated in the figure, one can define the distance between points to match the geometrical shape in the overlapping region.}\n\\label{fig:fig1}\n\\end{figure}\n\nOur main contribution of the article is as follows.\n\\begin{itemize}\n    \\item We extend the GATE to encode multiple source tasks setup.\n    \\item Extension to multiple tasks provide a positive leveraging effect.\n    \\item Proposed model outperforms conventional method in multi-task molecular property setup.\n\\end{itemize}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multi-Task Extension of Geometrically Aligned Transfer Encoder}\nSince the latent vector is believed to capture the essence of information for a given task, it is crucial to understand the geometrical characteristics of the latent spaces where the latent vector resides. If two different tasks share common factors in their property inference processes, then one may assume that the geometrical shapes of their latent spaces should be similar. Therefore, if one can align the geometrical shapes of tasks, mutual information will flow through mapping functions, thereby supporting the performance of the target task.\n\nHere, we utilize the GATE algorithm and aim to extend its architecture to accommodate multiple source tasks.\\footnote{For basic assumptions and detailed explanation of GATE, refer to \\cite{ko2023geometrically}.}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=0.92\\linewidth]{figures\/figure2\/figure2.pdf}\n\\end{center}\n\\caption{Schematic diagram for the Extended GATE algorithm. The algorithm consists of a number of Regression Units. Each Regression Unit corresponds to an individual task. The universal manifold covers the entire coordinate space of RU's, and the transformation model maps a vector from each RU to a locally flat frame on the universal manifold. One can take the reverse path from the manifold to reconstruct the original vector. Furthermore, one can also transfer a vector to another RU coordinate by utilizing a different task's inverse transformation module.}\n\\label{fig:fig2}\n\\end{figure}\n\nIn Figure~\\ref{fig:fig2} we first take an input SMILES and embed it into the corresponding vector. After embedding, latent space is formulated by encoders, which consist of DMPNN\\cite{dmpnn} and MLP layers. The latent vector is fed into task-corresponding heads for inference properties. Here we utilize MSE for basic regression loss in the training scheme as follows:\n\\begin{gather}\n    l_{\\mathrm{reg}} = \\frac{1}{N}\\sum_{i}^{N}(y_i - \\hat{y}_i)^2\n\\end{gather}\nWhere $N$, $y_i$, and $\\hat{y}_i$ represent the number of data points, target, and predicted value, respectively. The difference now is that there exist multiple tasks, hence, there are also multiple instances of the regression loss.\n\nTo align the geometrical shapes of tasks, it is necessary to establish a mapping relation between the latent space and the locally flat frame of the universal manifold. The coordinate mapping can be induced by a Jacobian at an arbitrary point: \\begin{gather}\n    z'^i \\equiv \\sum_j \\frac{\\partial z'^i}{\\partial z^j} z^j\n\\end{gather}\nThe model should always be able to differentiate in order to learn via gradient descent scheme. Hence, we design mapping function with autoencoder model. The encoder indicates mapping from latent space to universal manifold and decoder indicates mapping other way around.\n\\begin{gather} \\label{transform1}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_\\alpha = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow \\alpha}(z'_\\alpha)\\\\\n    \\label{transform2} z'_t = \\mathrm{Transfer}_{t\\rightarrow LF}(z_t) \\qquad    \\hat{z}_t = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_t)\n\\end{gather}\nWhere $t$ and $\\alpha$ indicate target task and source number of task respectively. If there are $k$ numbers of source tasks, Greek alphabet runs from $1 \\sim k$ and numbers indicate source task number. For instance, $\\mathrm{Transfer}_{t}(z_t)$ means transformation from target latent to universal manifold and $\\mathrm{Transfer}_{5}(z_5)$ means transformation from source task number $5$ to universal manifold.\nWe indeed utilize MSE loss for the autoencoder which consists of transfer and its inverse modules.\n\\begin{equation}\n    l_{\\mathrm{auto}} = \\sum_\\alpha \\mathrm{MSE}(z_\\alpha, \\hat{z}_\\alpha)\n\\end{equation}\nNow everything is set to match geometrical shapes of latent spaces. Since encoder maps latent vector on latent space to locally flat frame on universal manifold, it is straight forward to impose a constraint that matches latent vector from target task and source task.\n\nTo define the consistency loss, we should recall the definition of the transformation model from the equations mentioned in \\ref{transform1} and \\ref{transform2}. As depicted in the equations, $\\mathrm{Model}{0 \\rightarrow LF}$ and $\\mathrm{Model}{\\alpha \\rightarrow LF}$ indicate a model from the target to the locally flat (LF) frame and from the source to the LF frame, respectively. Here, we can impose a series of constraints to align the geometrical shapes from the source and target. One of these constraints requires that the latent vectors from the source and target should have the same value on the universal manifold. This constraint is referred to as the consistency loss.\n\\begin{equation}\n    l_{cons} = \\sum_\\alpha \\mathrm{MSE}(z'_\\alpha, z'_t)\n\\end{equation}\nThis loss equalizes target latent and source latent vector in a locally flat frame on universal manifold. The latent spaces also aligned by latent vectors. Furthermore, one can induce another form of constraint to maximize the alignment of latent spaces.\n\\begin{gather}\n    z'_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(z_\\alpha) \\qquad    \\hat{z}_{\\alpha \\rightarrow t} = \\mathrm{Transfer}^{-1}_{\\phantom{-1}LF \\rightarrow t}(z'_\\alpha)\n\\end{gather}\nThe equation above illustrates the transformation of a latent vector from the source task to the target task. If the universal manifold is well-defined and both latent spaces from the source and target tasks are aligned properly, then a latent vector transformed from the source to the target task and a latent vector from the target task induced by the same SMILES input should always be the same. Hence, it is straightforward to imagine the specific form of the constraint which is written as follows.\n\\begin{equation}\n    l_{map} = \\sum_\\alpha \\mathrm{MSE}(y_t, \\hat{y}_{\\alpha \\rightarrow t})\n\\end{equation}\nHere, $y_t$ represents the label for the target predicted value, and $\\hat{y}{s \\rightarrow t}$ indicates the predicted value from $\\hat{z}{\\alpha \\rightarrow t}$. The above loss ensures mutual information flow by aligning locally flat coordinates on the given latent vectors.\n\nHowever, unfortunately, these constraints are insufficient to globally align latent spaces, as none of the introduced loss functions have locally bounded properties. Yet, it is necessary to impose another constraint that is not restricted to local properties.\n\nIn Riemannian geometry, it is common to attack geometric equations to find specific form of a metric of the given space. If one can find the explicit form of a metric, then the curvature of a given space can be identified, which can be utilized to understand the global characteristics of the space. Or, in other way around, if one has distance among points on a manifold, it is possible to find a metric from distance equation.\n\\begin{equation} \\label{dist_curv}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu\n\\end{equation}\nHowever, in general, finding the analytic form of the metric is extremely complicated (or impossible). Therefore, we propose an idea to bypass this issue by utilizing the general mathematical characteristic of Riemannian geometry. In a curved space, distances between points are not intuitive and simple to compute. The metric is necessary to find finite distances. However, there is a wonderful invariance known as diffeomorphism in Riemannian manifolds. This invariance guarantees the freedom to fix coordinates by transformations induced by the Jacobian of a vector. And it is well-known that a locally flat frame is always possible to find around a given vector on a manifold. The locally flat frame, by its nature, is flat around the infinitesimal boundary of a vector. Therefore, the distance equation can now be reduced to a simpler form in local boundaries.\n\\begin{equation}\n    S^2 = \\int_l \\sum_\\mu \\sum_\\nu g_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_l \\sum_\\mu \\sum_\\nu \\eta_{\\mu\\nu}dx^\\mu dx^\\nu = \\int_a^b dx^2\n\\end{equation}\nHere, $a$ indicates a given latent vector and $b$ is a perturbation around vector $a$. If this perturbation is infinitesimal, the distance between vector and its perturbation can be simplified as follows.\n\\begin{equation}\n    S  =  |b - a|\n\\end{equation}\n\nNow, for a given SMILES input and its infinitesimal perturbations, the latent vectors from the source and target tasks can be transformed into a vector on a universal manifold where the locally flat frame resides. One can compute distances between the latent vector and its perturbations from each task and require them to be the same. By doing so, the locally flat latent spaces will align together on a universal manifold and cover the overlapping region smoothly. Then, the mutual information can naturally be transferred from one to another, and the extrapolation performance of the model will be boosted by source data. In an abstract form, the distance loss can be expressed as follows.\n\\begin{equation}\n    l_{dis} = \\frac{1}{M}\\sum_\\alpha C_\\alpha\\sum_{i}^M \\mathrm{MSE}(s^{i}_\\alpha, s^{i}_t)\n\\end{equation}\nWhere $M$ is the number of perturbations, $C_\\alpha$ is the given distance ratio for source to target, and $s^{i}_{s}$ is the displacement between pivot data points and their perturbations.\n\\begin{gather}\n    s^{i}_\\alpha \\equiv |(z'_\\alpha) - (z'^i_\\alpha)| \\qquad s^{i}_t \\equiv |(z'_t) - (z'^i_t)| \\\\\n    z'^i_\\alpha = \\mathrm{Transfer}_{\\alpha\\rightarrow LF}(\\mathrm{Encoder}_\\alpha(x^i))\\\\\n    z'^i_t = \\mathrm{Transfer}_{t\\rightarrow LF}(\\mathrm{Encoder}_t(x^i))   \n\\end{gather}\nHere $x^i$ denotes $i$th perturbation of embedded input $x$, and $\\mathrm{Encoder}_\\alpha$ and $\\mathrm{Encoder}_t$ are encoder parts of source and target model respectively. Finally, by gathering all losses with individual hyperparameters, we define the complete form of the loss function used in the extended GATE algorithm.\n\\begin{equation}\n    l_{tot} = l_{reg} + \\alpha l_{auto} + \\beta l_{cons} + \\gamma l_{map} + \\delta l_{dis}\n\\end{equation}\nHyperparameters play a crucial role in weighted summation parameters, and by tuning them sophisticatedly, the model's performance will reach its peak. In most cases, many hyperparameters are sufficient to be set to a trivial number like $1$, but for parameters $\\gamma$, $\\delta$, and $C_\\alpha$, it is worthwhile to tune them for optimal model performance. However, finding the right combinations of parameters can be challenging due to the immense search space. In such cases, we can rely on scientific knowledge to guide us in tuning them. \n\n\\section{Experiments}\n\\subsection{Experimental Setup}\n\n  A total of 10 datasets curated from five different sources named PubChem\\cite{10.1093\/nar\/gkac956}, Ochem\\cite{sushko2011online}, CCDDS, Yaws Handbook, and Jean-Claude Bradley were used for these experiments. We prepared the training and test sets by splitting each dataset according to the scaffold of the molecular structure\\cite{bemis1996properties}. A single NVIDIA A40 was used for every experiment, and four-fold cross-validation setting with uniform sampling and a separated test set was used for the default setup. For all experiments, we consistently used the same architecture for encoders and heads.\n  \n\n\n\\subsection{Effect of multitask extension from two-task GATE to three-task GATE}\n\n\\begin{figure}[t!]\n\\begin{center}\n\\includegraphics[width=1\\linewidth]{figures\/figure3\/figure3.pdf}\n\\end{center}\n\\caption{Regression performance of three-task GATE and two-task GATE in root mean square error (RMSE). For evaluating regression performance of two-task GATE, all three possible pairs of three tasks were trained separately and averaged.}\n\\label{fig:fig3}\n\\end{figure}\n\n  We first compared the regression performance of three-task GATE and two-task GATE to assess the impact of multitask extension. In each experiment, we used refractive index and heat of vaporization as pivot tasks and selected an additional task to constitute three tasks. Overall three set of experiments were performed using hydration free energy, surface tension or boiling point as an additional tasks respectively. To assess the regression performance of the two-task GATE, we separately trained and averaged all three possible combinations of the three tasks.\n  \n  As depicted in Figure~\\ref{fig:fig3}, the results demonstrate a clear synergy effect among the three tasks. Across all three experiment sets, there is a consistent reduction in the root mean square error (RMSE) of the three-task GATE compared to the two-task GATE, even when different additional tasks are included in the sets. This result indicates that the prediction performance of molecular properties can be enhanced by incorporating suitable auxiliary tasks, and this synergy effect can be achieved through the proposed multitask extension of the GATE.\n\n\\subsection{Regression performance of many-task GATE}\n\n\\begin{table}[!ht]\n\\caption{Regression performance of 10-task GATE, MTL, and STL in Pearson correlation.}\n\\label{corr}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} & \\textbf{STL} \\\\ \\hline \\hline\n        Parachor & 0.9303 & \\textbf{0.9359} & 0.9287  \\\\ \\hline\n        Surface Tension & \\textbf{0.8256} & 0.8195 & 0.7171  \\\\ \\hline\n        Dielectric Constant & 0.9067 & 0.9099 & \\textbf{0.9216}  \\\\ \\hline\n        Hydration Free Energy & \\textbf{0.9446} & 0.9409 & 0.9414  \\\\ \\hline\n        Viscosity & \\textbf{0.9272} & 0.8952 & 0.8967  \\\\ \\hline\n        Boiling Point & 0.8930 & \\textbf{0.9076} & 0.8847  \\\\ \\hline\n        Refractive Index & \\textbf{0.9795} & 0.9781 & 0.9761  \\\\ \\hline\n        Density & \\textbf{0.8518} & 0.8512 & 0.8237  \\\\ \\hline\n        Melting Point & 0.8715 & 0.8714 & \\textbf{0.8901}  \\\\ \\hline\n        Heat of Vaporization & \\textbf{0.9045} & 0.9018 & 0.8618  \\\\ \\hline \\hline\n        No. 1st & \\textbf{6} & 2 & 2  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n\n  To assess the effectiveness of GATE for multitask learning, we also compared the regression performance of the many-task GATE with that of classical multitask learning (MTL) techniques and single task learning (STL). As shown in Table~\\ref{corr}, Pearson correlation of GATE outperforms MTL and STL for 6 out of 10 tasks, whereas MTL and STL perform best for only 2 tasks each.\n\n  The advantage of the GATE for many-task setup is even more clearly shown in Table~\\ref{percent}. Table~\\ref{percent} shows percentage of improvement on regression performance of GATE and MTL compared to STL. As shown in the table, in many cases, multi-task setup enhances regression performance, but in some cases, it can actually reduce regression performance. This decline in performance can be attributed to negative transfer of undesired interfering information among the tasks. As evident from the table, GATE shows reduction of performance in only two tasks, while classical MTL exhibits performance decrease in four tasks out of ten tasks. This difference extends to more than 3.5 percent for viscosity, indicating that GATE significantly improves regression performance by a large margin, while MTL harms the regression. \n\n\\begin{table}[!ht]\n\\caption{Relative improvement of the regression performance of 10-task GATE and MTL over STL in percent.}\n\\label{percent}\n\\begin{center}\n    \\begin{tabular}{|c|c|c|c|}\n    \\hline\n        \\textbf{Tasks} & \\textbf{GATE} & \\textbf{MTL} \\\\ \\hline \\hline\n        Parachor & 0.18 & 0.78  \\\\ \\hline\n        Surface Tension & 15.13 & 14.28  \\\\ \\hline\n        Dielectric Constant & \\textbf{\\textcolor{red}{-1.61}} & \\textbf{\\textcolor{red}{-1.26}}  \\\\ \\hline\n        Hydration Free Energy & 0.33 & \\textbf{\\textcolor{red}{-0.06}}  \\\\ \\hline\n        Viscosity & \\textbf{3.40} & \\textbf{\\textcolor{red}{-0.16}}  \\\\ \\hline\n        Boiling Point & 0.94 & 2.59  \\\\ \\hline\n        Refractive Index & 0.35 & 0.21  \\\\ \\hline\n        Density & 3.40 & 3.33  \\\\ \\hline\n        Melting Point & \\textbf{\\textcolor{red}{-2.09}} & \\textbf{\\textcolor{red}{-2.09}}  \\\\ \\hline\n        Heat of Vaporization & 4.96 & 4.64  \\\\ \\hline\n    \\end{tabular}\n\\end{center}\n\\end{table}\n  \n  The result is well aligned with the experiments on stability of the latent spaces introduced in the original GATE paper\\cite{ko2023geometrically}, which showed that the latent space of GATE exhibits relatively stable characteristics compared to that of MTL. Because the GATE is more resilient to interfering information, it exhibits more robust regression performance in a multi-task setup involving numerous tasks, where there is complex information exchange among the tasks.  \n\n\n\\section{Discussion}\nThe original GATE algorithm interprets the latent space as a curved space and utilizes the mathematical concept of differential geometry, particularly Riemannian manifolds. Since the mathematical concept of GATE is not restricted to the two-task case, it is straightforward to generalize the algorithm to cover multiple source tasks without loss of generality. In this work, we designed the mathematical notion of the extended GATE with newly introduced hyperparameters and extended losses, and we have demonstrated the superior performance of the model using numerous open database datasets.\n\nWhile our model often outperforms conventional setups, there are several areas for improvement. First, the model's computational complexity grows significantly with the number of source tasks. Since the distance and mapping losses must be computed for every pair of source and target tasks, the complexity is on the order of $\\mathcal{O}(N^2)$. Therefore, compactifying the model architecture is one research direction to explore.\n\nSecond, the distance loss can potentially be omitted if one can directly calculate the curvature of the space by finding the analytic form of the metric tensor. While this is normally impossible, by utilizing the notion of operator learning, it can be achieved. After specifying the form of the metric tensor, one can pre-calculate the Ricci scalar of the space in advance. By matching the Ricci scalar from source and target spaces, the distance loss can be omitted and replaced. This idea can encode geometric information not restricted to local geometry but global, potentially improving GATE's performance and robustness even further.\n\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{arxiv_GATE}\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{document}","rating_answer":"1. Originality 9\n2. Method 8\n3. Credibility 7\n4. Understandability 8\n5. Relevance 9\n6. Quality of Citations 9\n7. Linguistic style and soundness of grammar 8\n8. Overall score 8.5"}
